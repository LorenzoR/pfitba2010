<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	 version="2.4">

	<display-name>booktube</display-name>

	 <!--  
	      There are three means to configure Wickets configuration mode and they are
	      tested in the order given. 
	      1) A system property: -Dwicket.configuration
	      2) servlet specific <init-param>
	      3) context specific <context-param>
	      The value might be either "development" (reloading when templates change)
	      or "deployment". If no configuration is found, "development" is the default.
	-->

	<filter>
		<filter-name>wicket.booktube</filter-name>
		<filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
		<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>com.booktube.WicketApplication</param-value>
		</init-param>
	</filter>

	<!-- Wicket filter with a Spring-aware application factory -->
	<!-- <filter>
        <filter-name>wicket.mysticpaste</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-name>applicationFactoryClassName</param-name>
            <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>
        </init-param>
    </filter>
	-->
	
	<!-- Hibernate filter -->
	<filter>
       <filter-name>open.hibernate.session.in.view</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>

    <!-- Important! This filter mapping must come before Wicket's! -->
    <filter-mapping>
       <filter-name>open.hibernate.session.in.view</filter-name>
       <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	<filter-mapping>
		<filter-name>wicket.booktube</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>

	<!-- Spring context to be available to our webapp if ever there is a need 
		for one of our pages to access the Spring managed beans directly -->
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:com/booktube/spring/applicationContext.xml</param-value>
    </context-param>
    
	
	<listener>
        <listener-class>
          org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
	
	<!-- <filter>
        <filter-name>wicket.session</filter-name>
        <filter-class>org.apache.wicket.protocol.http.servlet.WicketSessionFilter</filter-class>
        <init-param>
            <param-name>filterName</param-name>
            <param-value>wicket.booktube</param-value>
        </init-param>
    </filter>
	-->
	
	<!--<filter-mapping>
        <filter-name>wicket.session</filter-name>
        <url-pattern>/servlet/*</url-pattern>
    </filter-mapping>
 -->
 
 	<error-page>
		<error-code>404</error-code>
		<location>/error404</location>
	</error-page>

</web-app>
